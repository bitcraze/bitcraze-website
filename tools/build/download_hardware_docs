#!/usr/bin/env bash
set -e

scriptDir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
dstDir="${scriptDir}/../../src/documentation/hardware"
tmp="${scriptDir}/../../tmp"
downloadFile="${tmp}/download.zip"


function downloadOneAtifact() {
  local uri=$1
  local unzipName=$2

  mkdir -p ${unzipName}

  echo "Downloading ${uri}"
  curl -L -o ${downloadFile} ${uri}
  unzip -q -d ${unzipName} ${downloadFile}
  rm ${downloadFile}
  cp -r --link ${unzipName}/* ${dstDir}/
  rm -r ${unzipName}
}


function downloadGithubRelease() {
  local name=$1
  local tag=$2
  local nameTag=${name}/${tag}

  local uriDocs="https://github.com/bitcraze/${name}/releases/download/${tag}/docs-${tag}.zip"
  local unzipNameDocs=${tmp}/${name}-docs-${tag}

  local uriMd="https://github.com/bitcraze/${name}/releases/download/${tag}/md-${tag}.zip"
  local unzipNameMd=${tmp}/${name}-md-${tag}

  if [ -d "${dstDir}" ]; then
      echo "Seems as '${name}' is already downloaded - skipping"
  else
      mkdir -p ${dstDir}

      # Merge pdfs and source files in the same file tree
      downloadOneAtifact ${uriDocs} ${unzipNameDocs}
      downloadOneAtifact ${uriMd} ${unzipNameMd}
  fi
}



echo "Downloading hardware documentation..."

downloadGithubRelease "hardware" "40"
